import telebot
import sqlite3
import random
from datetime import datetime, timedelta
import matplotlib.pyplot as plt
import io
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
TOKEN = os.getenv('7896430421:AAExd1DmhC6dcK0ms5W6q9AmDKF90C4knLQ')
bot = telebot.TeleBot('7896430421:AAExd1DmhC6dcK0ms5W6q9AmDKF90C4knLQ', parse_mode='HTML')  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω HTML-—Ä–µ–∂–∏–º –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ –∏–º–µ–Ω–∏

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('dick_game.db', check_same_thread=False)
cursor = conn.cursor()

# –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö)
users = [
    ('Davlet', 310, '1970-01-01 00:00:00'),
    ('Skagi', 305, '1970-01-01 00:00:00'),
    ('makbauer', 235, '1970-01-01 00:00:00'),
    ('Sosihue', 234, '1970-01-01 00:00:00'),
    ('AmiR', 218, '1970-01-01 00:00:00'),
    ('kkosttt', 175, '1970-01-01 00:00:00'),
    ('_tsakhaev_üçÄ', 168, '1970-01-01 00:00:00'),
    ('Banan', 122, '1970-01-01 00:00:00')
]

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute("DROP TABLE IF EXISTS users")

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ username
cursor.execute('''
    CREATE TABLE users (
        user_id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT UNIQUE,  -- –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è username
        length INTEGER DEFAULT 0,
        last_used TEXT DEFAULT '1970-01-01 00:00:00'
    )
''')



# –í—Å—Ç–∞–≤–∫–∞ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
for user in users:
    cursor.execute("""
        INSERT INTO users (username, length, last_used)
        VALUES (?, ?, ?)
        ON CONFLICT(username) DO UPDATE SET length=excluded.length, last_used=excluded.last_used
    """, user)
conn.commit()


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
def set_default_values():
    cursor.execute("UPDATE users SET length = 0 WHERE length IS NULL")
    cursor.execute("UPDATE users SET last_used = '1970-01-01 00:00:00' WHERE last_used IS NULL")
    conn.commit()

set_default_values()

# –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def start_command(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /dick, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.")

@bot.message_handler(commands=['dick'])
def dick_command(message):
    user_id = message.from_user.id
    username = message.from_user.first_name

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
    user_cursor = conn.cursor()
    user_cursor.execute("SELECT user_id FROM users WHERE username = ?", (username,))
    user = user_cursor.fetchone()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ user_id –∏ last_used
    if user:
        user_cursor.execute("UPDATE users SET user_id = ?, last_used = ? WHERE username = ?",
                            (user_id, '1970-01-01 00:00:00', username))
        conn.commit()
    else:
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_cursor.execute("INSERT INTO users (user_id, username, length, last_used) VALUES (?, ?, 0, ?)",
                            (user_id, username, '1970-01-01 00:00:00'))
        conn.commit()
        bot.reply_to(message, f"<a href='tg://user?id={user_id}'>{username}</a>, —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –î–ª–∏–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ 0 —Å–º.")

    user_cursor.close()


    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    if not user:
        register_cursor = conn.cursor()
        register_cursor.execute("INSERT INTO users (user_id, username, length, last_used) VALUES (?, ?, 0, ?)",
                                (user_id, username, '1970-01-01 00:00:00'))
        conn.commit()
        register_cursor.close()
        bot.reply_to(message, f"<a href='tg://user?id={user_id}'>{username}</a>, —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –î–ª–∏–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ 0 —Å–º.")

    # –ö—É—Ä—Å–æ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_cursor = conn.cursor()
    user_cursor.execute("SELECT length, last_used FROM users WHERE user_id=?", (user_id,))
    user = user_cursor.fetchone()
    last_used = datetime.strptime(user[1], '%Y-%m-%d %H:%M:%S')
    user_cursor.close()

    if datetime.now() - last_used >= timedelta(seconds=3):  # –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        delta = random.choice(list(range(-5, 0)) + list(range(1, 11)))
        new_length = user[0] + delta

        update_cursor = conn.cursor()
        update_cursor.execute("UPDATE users SET length=?, last_used=? WHERE user_id=?",
                              (new_length, datetime.now().strftime('%Y-%m-%d %H:%M:%S'), user_id))
        conn.commit()
        update_cursor.close()

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ —Ç–æ–ø–µ
        rank_cursor = conn.cursor()
        rank_cursor.execute("SELECT user_id FROM users ORDER BY length DESC")
        rankings = [row[0] for row in rank_cursor.fetchall()]
        position = rankings.index(user_id) + 1
        rank_cursor.close()

        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-–æ–±—Ä–∞—â–µ–Ω–∏–µ–º –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if delta > 0:
            bot.reply_to(message, f"<a href='tg://user?id={user_id}'>{username}</a>, —Ç–≤–æ–π –ø–∏—Å—é–Ω –≤—ã—Ä–æ—Å –Ω–∞ {delta} —Å–º.\n"
                                  f"–¢–µ–ø–µ—Ä—å –æ–Ω —Ä–∞–≤–µ–Ω {new_length} —Å–º.\n"
                                  f"–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å {position} –º–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ.\n"
                                  "–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞!")
        else:
            bot.reply_to(message, f"<a href='tg://user?id={user_id}'>{username}</a>, —Ç–≤–æ–π –ø–∏—Å—é–Ω —Å–æ–∫—Ä–∞—Ç–∏–ª—Å—è –Ω–∞ {-delta} —Å–º.\n"
                                  f"–¢–µ–ø–µ—Ä—å –æ–Ω —Ä–∞–≤–µ–Ω {new_length} —Å–º.\n"
                                  f"–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å {position} –º–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ.\n"
                                  "–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞!")
    else:
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏ –∏ –¥–ª–∏–Ω—ã –∏–≥—Ä–æ–∫–∞
        current_length = user[0]
        rank_cursor = conn.cursor()
        rank_cursor.execute("SELECT user_id FROM users ORDER BY length DESC")
        rankings = [row[0] for row in rank_cursor.fetchall()]
        position = rankings.index(user_id) + 1
        rank_cursor.close()

        # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–∂–¥–∞–ª—Å—è –≤—Ä–µ–º–µ–Ω–∏, —Å HTML-–æ–±—Ä–∞—â–µ–Ω–∏–µ–º
        bot.reply_to(message, f"<a href='tg://user?id={user_id}'>{username}</a>, —Ç—ã —É–∂–µ –∏–≥—Ä–∞–ª.\n"
                              f"–°–µ–π—á–∞—Å –æ–Ω —Ä–∞–≤–µ–Ω {current_length} —Å–º.\n"
                              f"–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å {position} –º–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ.\n"
                              "–°–ª–µ–¥—É—é—â–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤—Ç—Ä–∞!")

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, /top_dick –∏ /stats
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
